an_envirment<- new.env()
an_envirment

an_envirment[["pythag"]] <- c(12,15,20,21)
an_envirment$root<- polyroot(c(6,-5,1))

assign(
  "moonday",
  weekdays(as.Date("1969/07/02")),
  an_envirment
)

an_envirment[["pythag"]]
an_envirment$root
get("moonday",an_envirment)

ls(envir = an_envirment)
ls.str(envir = an_envirment)

exists("pythag",an_envirment)

(a_list<-list(
    c(1,1,2,5,14,42),
    month.abb,
    matrix(c(3,-8,1,-3),nrow = 2),
    asin
))
names(a_list)<-c("catalan","month","involutary","arcsin")
a_list
(main_list<-list(
  middle_list = list(
    element_in_middle_list = diag(3),
    inner_list = list(
      element_in_middle_list = pi ^ (1:4),
      another_element_in_middle_list = "a"
    )
  ),
  element_in_main_list = log10(1:10)
))

is.atomic(list())
is.recursive(list())

length(a_list)
length(main_list)

nrow(a_list)
ncol(a_list)
NROW(a_list)
NCOL(a_list)

L1<-(1:100)
L2<-(101:200)
L1[[1]]+L2[[1]]

l<-list(
  first=1,
  second=2,
  third=list(
    alpha=3.1,
    beta=3.2
  )
)
l<-list(first = 1,second = 2,third = list(alpha=3.1,beta=3.2))
l[1:2]

l[[1]]
l[["first"]]
is.list(l[1])
is.list(l[[1]])

l$first
l$f

l[["third"]]["beta"]
l[[c("third","beta")]]
is.list(l[["third"]]["beta"])
is.list(l[["third"]][["beta"]])

l[c(4,2,5)]
l[c("fourth","second","fifth")]

l["fourth"]

busy_beaver <- c(1,6,21,107)
as.list(busy_beaver)

as.numeric(list(1,6,21,107))
(prime_factors <- list(
  two = 2,
  three = 3,
  four = c(2,2),
  five = 5 ,
  six = c(2,3),
  seven = 7,
  eight =  c(2,2,2),
  nine = c(3,3),
  ten = c(2,5),
))

new_factors <- unlist(prime_factors)
new_factors

c(list(a=1,b=2,list(3)))

c(list(a=1,b=2),list(3))

matrix_list_hybrid <- cbind(list(a=1,b=2),list(c=3,list(4)))
matrix_list_hybrid
str(matrix_list_hybrid)

china_holiday<-list(
  Jan = "New Year's Day",
  Feb = "Spring Festival",
  Mar = NULL,
  Apr = "Qingming Festival",
  May = "May Day",
  Jun = "Dragon Boat Festival",
  Jul = NULL,
  Aug = NULL,
  Sep = "Moon Festival",
  Oct = "National Festival",
  Nov = NULL,
  Dec = NULL,
)

is.na(NULL)

china_holiday$Sep <- Sep

(arguments_of_sd<-formals(sd))
china_holiday$Jun<-list(NULL)
china_holiday

pairlist()
list()

(a_data_frame<-data.frame(
  x = letters[1:5],
  y = rnorm(5),
  z = runif(5)>0.5
))
class(a_data_frame)

y <- rnorm(5)
names(y)<-month.name[1:5]
data.frame(
  x = letters[1:5],
  y = y,
  z = runif(5)>0.5
)

data.frame(
  x = letters[1:5],
  y = y,
  z = runif(5)>0.5,
  row.names = NULL
)

data.frame(
  x = letters[1:5],
  y = y,
  z = runif(5)>0.5,
  row.names = c("A","B","C","D","E")
)

row.names(a_data_frame)
colnames(a_data_frame)
dimnames(a_data_frame)
nrow(a_data_frame)
ncol(a_data_frame)
dim(a_data_frame)

data.frame(
  x = 1,
  y = 2:3,
  z = 4:7
)

data.frame(
  "A column" = letters[1:5],
  ". . ." = rnorm(5) > 0.5,
  ". . ." = runif(5)>0.5,
  check.names = TRUE
)

a_data_frame[2:3,1]
class(a_data_frame[2:3,-3])
class(a_data_frame[2:3,1])

t(a_data_frame)
class(t(a_data_frame))

another_data_frame<-data.frame(
  z = rlnorm(5),
  y = sample(5),
  x = letters[3:7]
)
rbind(a_data_frame,another_data_frame)
cbind(a_data_frame,another_data_frame)

colSums(a_data_frame[,2:3])
colMeans(a_data_frame[,2:3])
norlize(c(1,3,6,10,NA))
norlize(C(1,3,6,10,NA),na.rm = TRUE)

do.call(hypotenuse,list(x=3,y=4))

dfr1 <- data.frame(x = 1:5,y = rt(5,1))
dfr2 <- data.frame(x = 6:10,y = rebta(5,1,1))
do call <- data.frame(x = 11:15,y = rbeta(5,1,1))
do.call(rbind,list(dfr1,dfr2,dfr3))

menage <- c(1,0,0,1,2,13,80)
mean(meanage)

emp_cun_dist_fn <- ecdf(rnom(50))
is.function(emp_cun_dist_fn)

f <- function(x9){
  y9 <- 1
  g <- function(y9){
    (x9+y9)/2
  }
  g(x9)
}
f(sqrt(5))

f <- function(x8){
  y8 <-1
  g(x8)
}
L <- list(
  A = (1:9)^2,
  B = (10:19)^2,
  C = (20:29)^2,
  D = (30:39)^2,
  E = (40:49)^2,
  F = (50:59)^2,
  G = (60:69)^2,
  H = (70:79)^2,
  I = (80:89)^2,
  J = (90:99)^2
)
L
class(L)

iris
b_data<-data.frame(iris)
colMeans(b_data[,1:4])
a<-list(id=c(rep(1,100)))

l<-c(beaver2,a)
l


pig <- function(x=hypotenuse,y=2){
  sqrt(x^2+y^2)
}
pig()
g <- function(y8){
  (x8+y8)/2
}
f(sqrt(5))

